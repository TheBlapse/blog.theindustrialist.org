---
import { getCollection } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout.astro";
import EntriesOne from "@/components/entries/EntriesOne.astro";
import Hero from "@/components/landing/Hero.astro";
import Cta from "@/components/global/Cta.astro";
const allPosts = await getCollection("posts");
const tags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

const sortedPosts = allPosts.sort((a, b) => {
  const dateA = new Date(a.data.pubDate as unknown as string);
  const dateB = new Date(b.data.pubDate as unknown as string);
  return dateB.getTime() - dateA.getTime();
});

// Define date formatting options
const options: Intl.DateTimeFormatOptions = {
  year: "numeric",
  month: "long",
  day: "numeric",
};
---

<BaseLayout>
  <Hero />
  <section>
    <div class="mx-auto w-full max-w-6xl px-6 md:px-12 lg:px-32">
      <!-- <ol role="list" class="flex flex-wrap gap-3">
        {
          tags.map((tag) => (
            <li class="inline-flex items-center uppercase mx-auto hover:text-blue-500 text-xs font-medium text-black">
              <a href={`/tags/${tag}`}>{tag}</a>
            </li>
          ))
        }
      </ol> -->
      <ul
        class="mt-12 grid grid-cols-1 gap-1 gap-x-6 gap-y-10 sm:grid-cols-2 lg:grid-cols-2"
      >
        {
          sortedPosts.map((post) => {
            // Parse and format the pubDate
            const formattedDate = new Date(
              post.data.pubDate,
            ).toLocaleDateString("en-US", options);
            return (
              <EntriesOne
                url={"/posts/" + post.slug}
                title={post.data.title}
                description={post.data.description}
                alt={post.data.title}
                pubDate={formattedDate}
                author={post.data.author}
                image={post.data.image.url}
                tags={post.data.tags}
              />
            );
          })
        }
      </ul>
    </div>
  </section>
  <!-- <Cta /> -->
</BaseLayout>
